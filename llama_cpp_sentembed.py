# -*- coding: utf-8 -*-
"""llama_cpp_SentEmbed.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vu7rd8-GUw2qyt5_oRB-ZJpyWngDaQ_Q
"""

!nvidia-smi

# Commented out IPython magic to ensure Python compatibility.
# %%time
# !pip install llama-cpp-python --extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cu124

from llama_cpp import Llama

!wget https://huggingface.co/ChristianAzinn/labse-gguf/resolve/main/labse.Q8_0.gguf

model_path = "./labse.Q8_0.gguf"
llm = Llama(model_path=model_path, embedding=True, n_gpu_layers=1)

import numpy as np

def get_embedding(text):
    output = llm.embed(text)
    return output

def cosine_similarity(v1, v2):
    v1_norm = np.linalg.norm(v1)
    v2_norm = np.linalg.norm(v2)
    if v1_norm == 0 or v2_norm == 0:
        return 0.0  # Avoid division by zero
    return np.dot(v1, v2) / (v1_norm * v2_norm)

def cos_dist(v1, v2):
    v1_norm = np.linalg.norm(v1)
    v2_norm = np.linalg.norm(v2)
    if v1_norm == 0 or v2_norm == 0:
        return None  # Avoid division by zero
    return 1 - (np.dot(v1, v2) / (v1_norm * v2_norm))

# Example usage
sentence0 = "今天天氣好熱。"
sentence1 = "The weather sure is hot today."
sentence2 = "今天天气好热。"

embedding0 = get_embedding(sentence0)
embedding1 = get_embedding(sentence1)
embedding2 = get_embedding(sentence2)

cos_dist01 = cos_dist(embedding0, embedding1)
cos_dist02 = cos_dist(embedding0, embedding2)

print(f"Cosine distance between sentence 0 and 1: {cos_dist01}")
print(f"osine distance between sentence 0 and 2: {cos_dist02}")

